name: Deploy to Alibaba

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-alibaba-main
  cancel-in-progress: false

jobs:
  deploy-alibaba:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy over SSH (Alibaba)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.ALI_DEPLOY_HOST }}       # напр. 47.245.133.217
          username: ${{ secrets.ALI_DEPLOY_USER }}    # напр. admin
          key: ${{ secrets.ALI_DEPLOY_SSH_KEY }}      # приватный ключ для входа на сервер
          # Если ключ без пароля — удалите следующую строку:
          passphrase: ${{ secrets.ALI_DEPLOY_SSH_PASSPHRASE }}
          port: 22
          command_timeout: 60m
          script: |
            set -euxo pipefail
            echo "[$(date -u +%H:%M:%S)] preflight DNS/TLS"
            getent hosts github.com >/dev/null
            curl -sSfI https://github.com -m 10 >/dev/null

            echo "[$(date -u +%H:%M:%S)] ensure swap (2G) — helps npm build on 1GB RAM"
            if [ ! -f /swapfile ]; then
              sudo fallocate -l 2G /swapfile || sudo dd if=/dev/zero of=/swapfile bs=1M count=2048
              sudo chmod 600 /swapfile
              sudo mkswap /swapfile
              echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
              sudo swapon -a
            fi
            free -h || true

            echo "[$(date -u +%H:%M:%S)] run app deploy as myapp"
            sudo -u myapp bash -s <<'REMOTE'
            set -euxo pipefail
            echo "[$(date -u +%H:%M:%S)] cd repo"
            mkdir -p /srv/myapp/repo
            cd /srv/myapp/repo

            echo "[$(date -u +%H:%M:%S)] git sync"
            if [ ! -d .git ]; then
              git clone git@github.com:Mrdoker1/Taro.git .
            else
              git remote set-url origin git@github.com:Mrdoker1/Taro.git || true
            fi
            git fetch origin main --quiet
            git checkout main || git checkout -b main
            git pull --ff-only

            echo "[$(date -u +%H:%M:%S)] npm config for low-RAM"
            npm config set fund false
            npm config set audit false
            export NODE_OPTIONS="--max-old-space-size=256"
            export npm_config_jobs=2

            echo "[$(date -u +%H:%M:%S)] npm ci / install"
            if [ -f package-lock.json ]; then
              time npm ci --no-audit --no-fund
            else
              time npm install --no-audit --no-fund
            fi

            echo "[$(date -u +%H:%M:%S)] npm run build"
            time npm run build

            echo "[$(date -u +%H:%M:%S)] write deploy stamp"
            echo "sha=${GITHUB_SHA} time=$(date -u +%Y-%m-%dT%H:%M:%SZ)" > .deploy_info

            echo "[$(date -u +%H:%M:%S)] pm2 restart/start"
            if pm2 describe myapp-api >/dev/null 2>&1; then
              pm2 restart myapp-api --update-env
            else
              pm2 start "npm -- start" --name myapp-api --time
            fi
            pm2 save

            echo "[$(date -u +%H:%M:%S)] done: $(cat .deploy_info)"
            REMOTE
